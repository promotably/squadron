{
    "AWSTemplateFormatVersion" : "2010-09-09",
    "Description" : "Promotably stacks",

    "Parameters" : {
        "ArtifactBucket" : {
            "Description" : "S3 Bucket where build artifacts are stored",
            "Type" : "String",
            "Default" : "promotably-build-artifacts"
        },

        "NetworkTemplate" : {
            "Description" : "Path in ArtifactBucket to network.json",
            "Type" : "String"
        },
        "ApiTemplate" : {
            "Description" : "Path in ArtifactBucket to api.json",
            "Type" : "String"
        },
        "ScribeTemplate" : {
            "Description" : "Path in ArtifactBucket to sribe.json",
            "Type" : "String"
        },
        "ApiArtifact" : {
            "Description" : "Path in ArtifactBucket to api uberjar",
            "Type" : "String"
        },
        "ApiZip" : {
            "Description" : "Filename of API source",
            "Type" : "String"
        },
        "ScribeZip" : {
            "Description" : "Filename of Scribe source",
            "Type" : "String"
        },
        "DashboardRef" : {
            "Description" : "Git ref of dashboard to refer to",
            "Type" : "String",
            "Default" : "latest"
        },

        "SshKey" :  {
            "Description" : "Name of an EC2 KeyPair to enable SSH access (default is no ssh key)",
            "Type" : "String",
            "Default": "None",
            "MinLength": "1",
            "MaxLength": "64",
            "AllowedPattern" : "[-_ a-zA-Z0-9]*",
            "ConstraintDescription" : "can contain only alphanumeric characters, spaces, dashes and underscores."
        },

        "TestResultsSNSTopicARN" : {
            "Description" : "Send Integration Test results to this SNS topic",
            "Type" : "String",
            "Default" : "arn:aws:sns:us-east-1:955631477036:api-integration-tests",
            "AllowedPattern" : "arn:aws:sns:[-_:a-zA-Z0-9]*"
        }

    },

    "Mappings" : {
    },

    "Resources" : {

        "Network" : {
            "Type" : "AWS::CloudFormation::Stack",
            "Properties" : {
                "TemplateURL" : { "Fn::Join" : [ "", [ "https://", { "Ref" : "ArtifactBucket" }, ".s3.amazonaws.com/", { "Ref" : "NetworkTemplate" } ] ]},
                "Parameters" : {
                    "BastionKeyName" : { "Ref" : "SshKey" },
                    "NATKeyName" : { "Ref" : "SshKey" },
                    "SSHFrom" : "0.0.0.0/0"
                },
                "NotificationARNs" : {"Ref" : "AWS::NotificationARNs"}
            }
        },

        "Api" : {
            "Type" : "AWS::CloudFormation::Stack",
            "Properties" : {
                "TemplateURL" : { "Fn::Join" : [ "", [ "https://", { "Ref" : "ArtifactBucket" }, ".s3.amazonaws.com/", { "Ref" : "ApiTemplate" } ] ]},
                "Parameters" : {
                    "DashboardRef" : { "Ref" : "DashboardRef" },
                    "ArtifactName" : { "Ref" : "ApiArtifact" },
                    "SourceZip" : { "Ref" : "ApiZip" },
                    "ArtifactBucket" : { "Ref" : "ArtifactBucket" },
                    "TestResultsSNSTopicARN" : { "Ref" : "TestResultsSNSTopicARN" },
                    "DBSubnetIDs" : { "Fn::Join" : [ ",", [
                        { "Fn::GetAtt" : [ "Network", "Outputs.PrivateSubnetA" ] },
                        { "Fn::GetAtt" : [ "Network", "Outputs.PrivateSubnetB" ] },
                        { "Fn::GetAtt" : [ "Network", "Outputs.PrivateSubnetC" ] } ]]},
                    "CacheSubnetIDs" : { "Fn::Join" : [ ",", [
                        { "Fn::GetAtt" : [ "Network", "Outputs.PrivateSubnetA" ] },
                        { "Fn::GetAtt" : [ "Network", "Outputs.PrivateSubnetB" ] },
                        { "Fn::GetAtt" : [ "Network", "Outputs.PrivateSubnetC" ] } ]]},
                    "PublicSubnets" : { "Fn::Join" : [ ",", [
                        { "Fn::GetAtt" : [ "Network", "Outputs.PublicSubnetA" ] },
                        { "Fn::GetAtt" : [ "Network", "Outputs.PublicSubnetB" ] },
                        { "Fn::GetAtt" : [ "Network", "Outputs.PublicSubnetC" ] } ]]},
                    "PrivateSubnets" : { "Fn::Join" : [ ",", [
                        { "Fn::GetAtt" : [ "Network", "Outputs.PrivateSubnetA" ] },
                        { "Fn::GetAtt" : [ "Network", "Outputs.PrivateSubnetB" ] },
                        { "Fn::GetAtt" : [ "Network", "Outputs.PrivateSubnetC" ] } ]]},
                    "VpcId" : { "Fn::GetAtt" : [ "Network", "Outputs.VPCId" ] },
                    "Environment" : "integration",
                    "VpcDefaultSecurityGroup" : { "Fn::GetAtt" : [ "Network", "Outputs.VpcDefaultSecurityGroup" ] },
                    "NATSecurityGroup" : { "Fn::GetAtt" : [ "Network", "Outputs.NATSecurityGroup" ] },
                    "KeyPair" : { "Ref" : "SshKey" },
                    "DBName" : "promotably",
                    "DBUsername" : "promotably",
                    "DBPassword" : "promotably",
                    "DBClass" : "db.m3.medium",
                    "DBAllocatedStorage" : "10"
                },
                "NotificationARNs" : {"Ref" : "AWS::NotificationARNs"}
            }
        },

        "Scribe" : {
            "Type" : "AWS::CloudFormation::Stack",
            "Properties" : {
                "TemplateURL" : { "Fn::Join" : [ "", [ "https://", { "Ref" : "ArtifactBucket" }, ".s3.amazonaws.com/", { "Ref" : "ScribeTemplate" } ] ]},
                "Parameters" : {
                    "TestResultsSNSTopicARN" : { "Ref" : "TestResultsSNSTopicARN" },
                    "ArtifactBucket" : { "Ref" : "ArtifactBucket" },
                    "SourceZip" : { "Ref" : "ScribeZip" },
                    "DBHost" : { "Fn::GetAtt" : [ "Api", "Outputs.DBHost" ] },
                    "DBPort" : { "Fn::GetAtt" : [ "Api", "Outputs.DBPort" ] },
                    "DBName" : "promotably",
                    "DBUsername" : "promotably",
                    "DBPassword" : "promotably",
                    "KinesisStreamA" : { "Fn::GetAtt" : [ "Api", "Outputs.KinesisStreamA" ] },
                    "KinesisStreamB" : { "Fn::GetAtt" : [ "Api", "Outputs.KinesisStreamB" ] },
                    "PublicSubnetId" : { "Fn::GetAtt" : [ "Network", "Outputs.PublicSubnetA" ] },
                    "VpcId" : { "Fn::GetAtt" : [ "Network", "Outputs.VPCId" ] },
                    "Environment" : "integration",
                    "VpcDefaultSecurityGroup" : { "Fn::GetAtt" : [ "Network", "Outputs.VpcDefaultSecurityGroup" ] },
                    "KeyPair" : { "Ref" : "SshKey" }
                },
                "NotificationARNs" : {"Ref" : "AWS::NotificationARNs"}
            }
        }
    },

    "Outputs" : {
    }

}
