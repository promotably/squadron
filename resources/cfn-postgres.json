{
    "AWSTemplateFormatVersion" : "2010-09-09",
    "Description" : "RDS Postgres",

    "Parameters" : {

        "PrivateSubnets" : {
            "Description" : "List of VPC private subnet IDs for the cluster. Note: must match up with the passed AvailabilityZones.",
            "Type" : "List<AWS::EC2::Subnet::Id>"
        },
        "VpcId" : {
            "Description" : "VPC associated with the provided subnets",
            "Type" : "AWS::EC2::VPC::Id"
        },
        "Environment" : {
            "Description" : "Environment tag",
            "Type" : "String",
            "Default" : "integration",
            "AllowedValues" : [ "integration", "staging", "production" ]
        },

        "DBName" : {
            "Description" : "Database name",
            "Type" : "String"
        },
        "DBUsername" : {
            "Description" : "Database username",
            "Type" : "String"
        },
        "DBPassword" : {
            "Description" : "Database password",
            "Type" : "String",
            "NoEcho" : "true"
        },
        "DBClass" : {
            "Description" : "Database instance class",
            "Type" : "String",
            "Default" : "default"
        },
        "DBAllocatedStorage" : {
            "Description" : "Database allocated storage",
            "Type" : "String"
        },
        "DBSnapshotId" : {
            "Description" : "DB Snapshot to restore from (empty string for fresh database)",
            "Type" : "String",
            "Default" : "promotably-base"
        }
    },

    "Conditions" : {
        "DefaultDBClass" : { "Fn::Equals" : [ { "Ref" : "DBClass" }, "default" ]},
        "DbRestore" : { "Fn::Not" : [{ "Fn::Equals" : [ { "Ref" : "DBSnapshotId" }, "" ] }]}
    },

    "Mappings" : {
        "config" : {
            "integration" : {
                "dbClass" : "db.t1.micro",
                "multiAZ" : "false",
                "backupRetention" : "0"
            },
            "staging" : {
                "dbClass" : "db.t1.micro",
                "multiAZ" : "false",
                "backupRetention" : "7"
            }
        }
    },

    "Resources" : {

        "DBSubnetGroup" : {
            "Type" : "AWS::RDS::DBSubnetGroup",
            "Properties" : {
                "DBSubnetGroupDescription" : { "Ref" : "AWS::StackName" },
                "SubnetIds" : { "Ref" : "PrivateSubnets" },
                "Tags": [{ "Key" : "Name", "Value" : { "Ref" : "AWS::StackName" } },
                         { "Key" : "Environment", "Value" : { "Ref" : "Environment" }}]
            }
        },

        "ClientSecurityGroup": {
            "Type": "AWS::EC2::SecurityGroup",
            "Properties": {
                "VpcId" : { "Ref" : "VpcId" },
                "GroupDescription" : { "Fn::Join" : [ " - ", [ { "Ref" : "AWS::StackName" }, "clients" ] ]}
            }
        },

        "SecurityGroup": {
            "Type": "AWS::EC2::SecurityGroup",
            "Properties": {
                "VpcId" : { "Ref" : "VpcId" },
                "GroupDescription" : { "Ref" : "AWS::StackName" },
                "SecurityGroupIngress" : [
                    { "IpProtocol" : "tcp", "FromPort" : "5432", "ToPort" : "5432", "SourceSecurityGroupId": { "Ref" : "ClientSecurityGroup" } }
                ]
            }
        },

        "DBInstance" : {
            "Type": "AWS::RDS::DBInstance",
            "DeletionPolicy" : "Snapshot",
            "Properties": {
                "DBName"            : { "Fn::If" : [ "DbRestore", { "Ref" : "AWS::NoValue" }, { "Ref" : "DBName" } ]},
                "Engine"            : "postgres",
                "MasterUsername"    : { "Ref" : "DBUsername" },
                "MasterUserPassword": { "Ref" : "DBPassword" },
                "MultiAZ" : { "Fn::FindInMap" : [ "config", { "Ref" : "Environment" }, "multiAZ" ]},
                "DBInstanceClass"   : { "Fn::If" : [ "DefaultDBClass",
                                        { "Fn::FindInMap" : [ "config", { "Ref" : "Environment" }, "dbClass" ]},
                                        { "Ref" : "DBClass" } ]},
                "VPCSecurityGroups"  : [{ "Ref" : "SecurityGroup" }],
                "AllocatedStorage"  : { "Ref" : "DBAllocatedStorage" },
                "DBSubnetGroupName" : { "Ref" : "DBSubnetGroup" },
                "BackupRetentionPeriod" : { "Fn::FindInMap" : [ "config", { "Ref" : "Environment" }, "backupRetention" ]},
                "DBSnapshotIdentifier" : { "Fn::If" : [ "DbRestore", { "Ref" : "DBSnapshotId" }, { "Ref" : "AWS::NoValue" } ]}
            }
        }
    },

    "Outputs" : {
        "DBName" : {
            "Description" : "Database Name",
            "Value" : { "Ref" : "DBName" }
        },
        "DBHost" : {
            "Description" : "RDS Hostname",
            "Value" : { "Fn::GetAtt" : [ "DBInstance", "Endpoint.Address" ]}
        },
        "DBPort" : {
            "Description" : "RDS Port",
            "Value" : { "Fn::GetAtt": [ "DBInstance", "Endpoint.Port" ]}
        },
        "DBClientSecGrp" : {
            "Description" : "Security group in which to place RDS clients",
            "Value" : { "Fn::GetAtt" : [ "ClientSecurityGroup", "GroupId" ]}
        }
    }
}
